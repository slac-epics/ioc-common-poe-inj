# ICT200DB-12IRC PDU db template for 48V bus

# busName: string
record(stringin,"$(PRE,undefined):BusA" )
{
        field( DTYP, "SnmpV2c" )
        field( INP, "@$(HOST,undefined) write ICT-MIB::busName.0 " )
        field( SCAN, "I/O Intr" )
        field( DESC, "48V BUS" )
}

# busVoltage: string
record(ai,"$(PRE,undefined):BusA:Voltage" )
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::busVoltage.0 " )
	field( SCAN, "I/O Intr" )
	field( HIGH, "49.5" )
	field( HSV, "MINOR" )
	field( HIHI, "51" )
	field( HHSV, "MAJOR" )
	field( LOW, "46.5" )
	field( LSV, "MINOR" )
	field( LOLO, "45" )
	field( LLSV, "MAJOR" )
	field( PINI, "YES" )
}

# busCurrent: string
record(ai,"$(PRE,undefined):BusA:Current" )
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::busCurrent.0 " )
	field( SCAN, "I/O Intr" )
	field( HIGH, "90" )
	field( HSV, "MINOR" )
	field( HIHI, "100" )
	field( HHSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputName: string
record(stringin,"$(PRE,undefined):Output1A" )
{
        field( DTYP, "SnmpV2c" )
        field( INP, "@$(HOST,undefined) write ICT-MIB::outputName.0 " )
        field( SCAN, "I/O Intr" )
        field( DESC, "48V output" )
}

# outputName: string
record(stringin,"$(PRE,undefined):Output2A" )
{
        field( DTYP, "SnmpV2c" )
        field( INP, "@$(HOST,undefined) write ICT-MIB::outputName.1 " )
        field( SCAN, "I/O Intr" )
        field( DESC, "48V output" )
}

# outputName: string
record(stringin,"$(PRE,undefined):Output3A" )
{
        field( DTYP, "SnmpV2c" )
        field( INP, "@$(HOST,undefined) write ICT-MIB::outputName.2 " )
        field( SCAN, "I/O Intr" )
        field( DESC, "48V output" )
}

# outputName: string
record(stringin,"$(PRE,undefined):Output4A" )
{
        field( DTYP, "SnmpV2c" )
        field( INP, "@$(HOST,undefined) write ICT-MIB::outputName.3 " )
        field( SCAN, "I/O Intr" )
        field( DESC, "48V output" )
}

# outputName: string
record(stringin,"$(PRE,undefined):Output5A" )
{
        field( DTYP, "SnmpV2c" )
        field( INP, "@$(HOST,undefined) write ICT-MIB::outputName.4 " )
        field( SCAN, "I/O Intr" )
        field( DESC, "48V output" )
}

# outputName: string
record(stringin,"$(PRE,undefined):Output6A" )
{
        field( DTYP, "SnmpV2c" )
        field( INP, "@$(HOST,undefined) write ICT-MIB::outputName.5 " )
        field( SCAN, "I/O Intr" )
        field( DESC, "48V output" )
}

# outputCurrent: string 
record(ai,"$(PRE,undefined):Output1A:Current")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputCurrent.0" )
	field( SCAN, "I/O Intr" )
	field( HIGH, "12" )
	field( HSV, "MINOR" )
	field( HIHI, "14.5" )
	field( HHSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputCurrent: string 
record(ai,"$(PRE,undefined):Output2A:Current")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputCurrent.1" )
	field( SCAN, "I/O Intr" )
	field( HIGH, "12" )
	field( HSV, "MINOR" )
	field( HIHI, "14.5" )
	field( HHSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputCurrent: string 
record(ai,"$(PRE,undefined):Output3A:Current")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputCurrent.2" )
	field( SCAN, "I/O Intr" )
	field( HIGH, "12" )
	field( HSV, "MINOR" )
	field( HIHI, "14.5" )
	field( HHSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputCurrent: string 
record(ai,"$(PRE,undefined):Output4A:Current")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputCurrent.3" )
	field( SCAN, "I/O Intr" )
	field( HIGH, "12" )
	field( HSV, "MINOR" )
	field( HIHI, "14.5" )
	field( HHSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputCurrent: string 
record(ai,"$(PRE,undefined):Output5A:Current")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputCurrent.4" )
	field( SCAN, "I/O Intr" )
	field( HIGH, "12" )
	field( HSV, "MINOR" )
	field( HIHI, "14.5" )
	field( HHSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputCurrent: string 
record(ai,"$(PRE,undefined):Output6A:Current")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputCurrent.5" )
	field( SCAN, "I/O Intr" )
	field( HIGH, "12" )
	field( HSV, "MINOR" )
	field( HIHI, "14.5" )
	field( HHSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputFuseStatus: INTEGER { ok(1), open(2) } 
record(mbbi,"$(PRE,undefined):Output1A:BreakerStatus")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputFuseStatus.0 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "OK" )
	field( ONST, "OPEN" )
	field( ZRSV, "NO_ALARM" )
	field( ONSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputFuseStatus: INTEGER { ok(1), open(2) } 
record(mbbi,"$(PRE,undefined):Output2A:BreakerStatus")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputFuseStatus.1 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "OK" )
	field( ONST, "OPEN" )
	field( ZRSV, "NO_ALARM" )
	field( ONSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputFuseStatus: INTEGER { ok(1), open(2) } 
record(mbbi,"$(PRE,undefined):Output3A:BreakerStatus")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputFuseStatus.2 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "OK" )
	field( ONST, "OPEN" )
	field( ZRSV, "NO_ALARM" )
	field( ONSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputFuseStatus: INTEGER { ok(1), open(2) } 
record(mbbi,"$(PRE,undefined):Output4A:BreakerStatus")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputFuseStatus.3 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "OK" )
	field( ONST, "OPEN" )
	field( ZRSV, "NO_ALARM" )
	field( ONSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputFuseStatus: INTEGER { ok(1), open(2) } 
record(mbbi,"$(PRE,undefined):Output5A:BreakerStatus")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputFuseStatus.4 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "OK" )
	field( ONST, "OPEN" )
	field( PINI, "YES" )
}

# outputFuseStatus: INTEGER { ok(1), open(2) } 
record(mbbi,"$(PRE,undefined):Output6A:BreakerStatus")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputFuseStatus.5 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "OK" )
	field( ONST, "OPEN" )
	field( ZRSV, "NO_ALARM" )
	field( ONSV, "MAJOR" )
	field( PINI, "YES" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbi,"$(PRE,undefined):Output1A:GetState")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputEnable.0 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLED" )
	field( ONST, "DISABLED" )
	field( PINI, "YES" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbo,"$(PRE,undefined):Output1A:SetState")
{
	field( DTYP, "SnmpV2c" )
	field( OUT, "@$(HOST,undefined) write ICT-MIB::outputEnable.0 " )
	field( SCAN, "Passive" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLE" )
	field( ONST, "DISABLE" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbi,"$(PRE,undefined):Output2A:GetState")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputEnable.1 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLED" )
	field( ONST, "DISABLED" )
	field( PINI, "YES" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbo,"$(PRE,undefined):Output2A:SetState")
{
	field( DTYP, "SnmpV2c" )
	field( OUT, "@$(HOST,undefined) write ICT-MIB::outputEnable.1 " )
	field( SCAN, "Passive" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLE" )
	field( ONST, "DISABLE" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbi,"$(PRE,undefined):Output3A:GetState")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputEnable.2 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLED" )
	field( ONST, "DISABLED" )
	field( PINI, "YES" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbo,"$(PRE,undefined):Output3A:SetState")
{
	field( DTYP, "SnmpV2c" )
	field( OUT, "@$(HOST,undefined) write ICT-MIB::outputEnable.2 " )
	field( SCAN, "Passive" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLE" )
	field( ONST, "DISABLE" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbi,"$(PRE,undefined):Output4A:GetState")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputEnable.3 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLED" )
	field( ONST, "DISABLED" )
	field( PINI, "YES" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbo,"$(PRE,undefined):Output4A:SetState")
{
	field( DTYP, "SnmpV2c" )
	field( OUT, "@$(HOST,undefined) write ICT-MIB::outputEnable.3 " )
	field( SCAN, "Passive" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLE" )
	field( ONST, "DISABLE" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbi,"$(PRE,undefined):Output5A:GetState")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputEnable.4 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLED" )
	field( ONST, "DISABLED" )
	field( PINI, "YES" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbo,"$(PRE,undefined):Output5A:SetState")
{
	field( DTYP, "SnmpV2c" )
	field( OUT, "@$(HOST,undefined) write ICT-MIB::outputEnable.4 " )
	field( SCAN, "Passive" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLE" )
	field( ONST, "DISABLE" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbi,"$(PRE,undefined):Output6A:GetState")
{
	field( DTYP, "SnmpV2c" )
	field( INP, "@$(HOST,undefined) write ICT-MIB::outputEnable.5 " )
	field( SCAN, "I/O Intr" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLED" )
	field( ONST, "DISABLED" )
	field( PINI, "YES" )
}

# outputEnable: INTEGER { enabled(1), disabled(2) } 
record(mbbo,"$(PRE,undefined):Output6A:SetState")
{
	field( DTYP, "SnmpV2c" )
	field( OUT, "@$(HOST,undefined) write ICT-MIB::outputEnable.5 " )
	field( SCAN, "Passive" )
	field( ZRVL, "1" )
	field( ONVL, "2" )
	field( ZRST, "ENABLE" )
	field( ONST, "DISABLE" )
}